msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: CREATE INDEX USING pgroonga\n"
"---"
msgstr ""
"---\n"
"title: CREATE INDEX USING pgroonga\n"
"---"

msgid "# `CREATE INDEX USING pgroonga`"
msgstr ""

msgid ""
"You need to specify `USING pgroonga` to `CREATE INDEX` to use PGroonga as inde"
"x method. This section describes about `pgroonga` index method."
msgstr ""
"インデックスメソッドとしてPGroongaを使うためには`CREATE INDEX`に`USING pgroonga`を指定します。このセクションでは`pg"
"roonga`インデックスメソッドについて説明します。"

msgid "## Syntax"
msgstr "## 構文"

msgid ""
"This section describes only `pgroonga` index method related `CREATE INDEX` syn"
"tax. See [`CREATE INDEX` document by PostgreSQL]({{ site.postgresql_doc_base_u"
"rl.en }}/sql-createindex.html) for full `CREATE INDEX` syntax."
msgstr ""
"このセクションでは`pgroonga`インデックスメソッド関連の`CREATE INDEX`の構文だけ説明します。完全な`CREATE INDEX`の構文は"
"[PostgreSQLの`CREATE INDEX`のドキュメント]({{ site.postgresql_doc_base_url.ja }}/sql-c"
"reateindex.html)を参照してください。"

msgid "Here is a basic syntax for creating a single column index:"
msgstr "シングルカラムインデックスを作成する基本的な構文は次の通りです。"

msgid ""
"```sql\n"
"CREATE INDEX ${INDEX_NAME}\n"
"          ON ${TABLE_NAME}\n"
"       USING pgroonga (${COLUMN});\n"
"```"
msgstr ""

msgid "This syntax can be used for the following cases:"
msgstr "次のケースのときはこの構文を使えます。"

msgid ""
"  * Creating a full text search index for a `text` type column\n"
"  * Creating a full text search index for an array of `text` type column\n"
"  * Creating a equality condition and comparison conditions search index for a"
" non `text` type columns\n"
"  * Creating a equality condition and comparison conditions search index for a"
"n array of non `text` type columns\n"
"  * Creating a contain search and complex search index for `jsonb` type column"
msgstr ""
"  * `text`型のカラム用の全文検索インデックスを作るとき\n"
"  * `text`型の配列のカラム用の全文検索インデックスを作るとき\n"
"  * `text`型以外の型のカラム用の等価条件・比較条件検索用インデックスを作るとき\n"
"  * `text`型以外の型の配列のカラム用の等価条件・比較条件検索用インデックスを作るとき\n"
"  * `jsonb`型のカラム用のサブセット検索・高度な検索用のインデックスを作るとき"

msgid ""
"Here is a basic syntax for creating a full text search index for a `varchar` t"
"ype column:"
msgstr "`varchar`型のカラム用の全文検索インデックスを作るときの基本的な構文は次の通りです。"

msgid ""
"```sql\n"
"CREATE INDEX ${INDEX_NAME}\n"
"          ON ${TABLE_NAME}\n"
"       USING pgroonga (${COLUMN} pgroonga_varchar_full_text_search_ops_v2);\n"
"```"
msgstr ""

msgid ""
"You need to specify `pgroonga_varchar_full_text_search_ops_v2` operator class "
"for the case."
msgstr "この場合は`pgroonga_varchar_full_text_search_ops_v2`オペレータークラスを指定する必要があります。"

msgid "You can also use `INCLUDE` since 2.3.5."
msgstr "2.3.5から`INCLUDE`も使えます。"

msgid "### Customization {#customization}"
msgstr "### カスタマイズ {#customization}"

msgid "You can customize the followings by `WITH` option of `CREATE INDEX`:"
msgstr "`CREATE INDEX`の`WITH`オプションを使って次の項目をカスタマイズできます。"

msgid ""
"  * Plugin: It's an extension for Groonga. You can use additional features inc"
"luding additional tokenizers, normalizers and token filters by registering a p"
"lugin."
msgstr ""
"  * プラグイン：Groongaの拡張機能です。プラグインを登録することで追加の機能を使うことができます。追加の機能には追加のトークナイザー・ノーマライザ"
"ー・トークンフィルターなどがあります。"

msgid "  * Tokenizer: It's a module for customizing how to extract keywords."
msgstr "  * トークナイザー：キーワードの抽出方法をカスタマイズするモジュールです。"

msgid ""
"  * Normalizer: It's a module for customizing equality of `text` and `varchar`"
" types."
msgstr "  * ノーマライザー：`text`型と`varchar`型の等価性をカスタマイズするモジュールです。"

msgid "  * Token filter: It's a module for filtering keywords extracted by tokenizer."
msgstr "  * トークンフィルター：トークナイザーが抽出したキーワードをフィルターするモジュールです。"

msgid "  * Lexicon type: It's a type for lexicon that manages tokens."
msgstr "  * 語彙表の種類：トークンを管理する語彙表の種類です。"

msgid "  * Query syntax: It's the syntax used by [`$@~` operator][query-v2]."
msgstr "  * クエリー構文：[`$@~`演算子][query-v2]が使っている構文です。"

msgid ""
"Normally, you don't need to customize them because the default values of them "
"are suitable for most cases. Features to customize them are for advanced users"
"."
msgstr ""
"通常、これらをカスタマイズする必要はありません。なぜなら多くの場合で適切なようにデフォルト値が設定されているからです。これらをカスタマイズする機能は高度なユ"
"ーザー向けの機能です。"

msgid "Plugin and token filter aren't used by default."
msgstr "デフォルトではプラグインとトークンフィルターは使われていません。"

msgid "Here are the default tokenizer, normalizer and lexicon type:"
msgstr "デフォルトのトークナイザーとノーマライザーと語彙表の種類は次の通りです。"

msgid ""
"  * Tokenizer: [`TokenBigram`][groonga-token-bigram]: It's a bigram based toke"
"nizer. It combines bigram tokenization and white space based tokenization. It "
"uses bigram tokenization for non ASCII characters and white space based tokeni"
"zation for ASCII characters. It reduces noise for ASCII characters only query."
msgstr ""
"  * トークナイザー：[`TokenBigram`][groonga-token-bigram]：bigramベースのトークナイザーです。このトークナイザ"
"ーはbigramベースのトークナイズ方法とスペース区切りベースのトークナイズ方法を組み合わせています。非ASCII文字にはbigramベースのトークナイズ方"
"法を使い、ASCII文字にはスペース区切りベースのトークナイズ方法を使います。これはASCII文字だけのクエリーで検索したときのノイズを減らすためです。"

msgid ""
"  * Normalizer: [`NormalizerAuto`][groonga-normalizer-auto]: It chooses suitab"
"le normalization based on target encoding. For example, it uses [Unicode NFKC]"
"[unicode-nfkc] based normalization for UTF-8."
msgstr ""
"  * ノーマライザー：[`NormalizerAuto`][groonga-normalizer-auto]：対象のエンコーディングに合わせて適切なノーマ"
"ライズ方法を選びます。たとえば、UTF-8の場合は[Unicode NFKC][unicode-nfkc]ベースのノーマライズ方法を使います。\n"

msgid ""
"  * Lexicon type: [`patricia_trie`][groonga-table-patricia-trie]: It supports "
"rich token search features such as predictive search. Its size is small."
msgstr ""
"  * 語彙表の種類：[`patricia_trie`][groonga-table-patricia-trie]：前方一致検索のようなリッチな方法でトーク"
"ンを検索できます。サイズも小さいです。"

msgid "#### How to register plugins {#custom-plugins}"
msgstr "#### プラグインの登録方法 {#custom-plugins}"

msgid "Since 1.2.0."
msgstr "1.2.0で追加。"

msgid ""
"Specify `plugins='${PLUGIN_NAME_1}, ${PLUGIN_NAME_2}, ..., ${PLUGIN_NAME_N}'` "
"for registering plugins."
msgstr "プラグインを登録するには`plugins='${プラグイン名1}, ${プラグイン名2}, ..., ${プラグイン名N}'`を指定します。"

msgid ""
"Note that you must specify `plugins` as the first option in `CREATE INDEX`. Op"
"tions in `CREATE INDEX` are processed by the specified order. Plugins should b"
"e registered before other options are processed because tokenizer, normalizer "
"and token filters may be included in the plugins."
msgstr ""
"`CREATE INDEX`の最初のオプションとして`plugins`を指定しなければいけないことに注意してください。`CREATE INDEX`のオプショ"
"ンは指定された順に処理されます。指定したプラグインに含まれてるトークナイザー・ノーマライザー・トークンフィルターを使うかもしれないので、他のオプションより先"
"にプラグインを登録しておく必要があります。"

msgid ""
"Here is an example to register `token_filters/stem` plugin to use `TokenFilter"
"Stem` token filter:"
msgstr "以下は`TokenFilterStem`トークンフィルターを使うために`token_filters/stem`プラグインを登録する例です。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_content_index\n"
"          ON memos\n"
"       USING pgroonga (content)\n"
"        WITH (plugins='token_filters/stem',\n"
"              token_filters='TokenFilterStem');\n"
"```"
msgstr ""

msgid ""
"See [How to customize token filters](#custom-token-filters) for token filters "
"details."
msgstr "トークンフィルターについては[トークンフィルターのカスタマイズ方法](#custom-token-filters)を参照してください。"

msgid "#### How to customize tokenizer {#custom-tokenizer}"
msgstr "#### トークナイザーのカスタマイズ方法 {#custom-tokenizers}"

msgid ""
"Specify `tokenizer='${TOKENIZER_NAME}'` for customizing tokenizer. Normally, y"
"ou don't need to customize tokenizer."
msgstr "トークナイザーをカスタマイズするには`tokenizer='${トークナイザー名}'`を指定します。通常、トークナイザーをカスタマイズする必要はありません。"

msgid ""
"Here is an example to use [MeCab][mecab] based tokenizer. You need to specify "
"`tokenizer='TokenMecab'`. [`TokenMecab`][groonga-token-mecab] is a name of MeC"
"ab based tokenizer."
msgstr ""
"以下は[MeCab][mecab]ベースのトークナイザーを使う例です。`tokenizer='TokenMecab'`を指定する必要があります。[`Toke"
"nMecab`][groonga-token-mecab]はMeCabベースのトークナイザーの名前です。"

msgid ""
"CREATE INDEX pgroonga_content_index\n"
"          ON memos\n"
"       USING pgroonga (content)\n"
"        WITH (tokenizer='TokenMecab');\n"
"```"
msgstr ""

msgid ""
"You can disable tokenizer by specifying `tokenizer=''`. If you disable tokeniz"
"er, you can search column value only by exact match search and prefix search. "
"It reduces noise for some cases. For example, it's useful for tag search, name"
" search and so on."
msgstr ""
"`tokenizer=''`と指定することでトークナイザーを無効にすることができます。トークナイザーを無効にすると、完全一致検索または前方一致検索のみでカラ"
"ムの値を検索できます。これにより誤ヒットが少なくなるケースがあります。例えば、タグ検索・名前検索などのときは有用です。"

msgid "Here is an example to disable tokenizer:"
msgstr "以下はトークナイザーを無効にする例です。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  tag text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tag_index\n"
"          ON memos\n"
"       USING pgroonga (tag)\n"
"        WITH (tokenizer='');\n"
"```"
msgstr ""

msgid ""
"`tokenizer='TokenDelimit'` will be useful for tag search. See also [`TokenDeli"
"mit`][groonga-token-delimit]."
msgstr ""
"`tokenizer='TokenDelimit'`はタグ検索で便利です。[`TokenDelimit`][groonga-token-delimit]も参"
"照してください。"

msgid ""
"You can specify tokenizer options by `tokenizer='${TOKENIZER_NAME}(...)'` synt"
"ax."
msgstr "`tokenizer='${TOKENIZER_NAME}(...)'`という構文でトークナイザーのオプションを指定できます。"

msgid "It's available since 2.0.6."
msgstr "2.0.6から使えます。"

msgid "Here is an example to use `TokenNgram` tokenizer with `\"n\"` and `3` options:"
msgstr "以下は`\"n\"`オプションと`3`オプションを指定して`TokenNgram`トークナイザーを使う例です。"

msgid ""
"CREATE INDEX pgroonga_tag_index\n"
"          ON memos\n"
"       USING pgroonga (tag)\n"
"        WITH (tokenizer='TokenNgram(\"n\", 3)');\n"
"```"
msgstr ""

msgid "See [Tokenizers][groonga-tokenizers] for other tokenizers."
msgstr "他のトークナイザーについては[トークナイザー][groonga-tokenizers]を参照してください。"

msgid "#### How to customize normalizer {#custom-normalizer}"
msgstr "#### ノーマライザーのカスタマイズ方法 {#custom-normalizer}"

msgid ""
"You can use the following parameters to customize normalizer. Normally, you do"
"n't need to customize normalizer."
msgstr "次のパラメーターを使ってノーマライザーをカスタマイズできます。通常、ノーマライザーをカスタマイズする必要はありません。"

msgid ""
"  * `normalizers`: The default normalizers that are used when the following pa"
"rameters aren't used."
msgstr "  * `normalizers`：以下のどのパラメーターも使われなかったときに使われるデフォルトのノーマライザーです。"

msgid "    * Since 2.3.1."
msgstr "    * 2.3.1で追加。"

msgid "  * `normalizer`: Same as `normalizers`. This is deprecated since 2.3.1."
msgstr "  * `normalizer`：`normalizers`と同じです。2.3.1から非推奨になりました。"

msgid ""
"  * `full_text_search_normalizer`: Normalizer that is used for full text searc"
"h index when `normalizers_mapping` doesn't specify normalizer for the index ta"
"rget."
msgstr ""
"  * `full_text_search_normalizer`：`normalizers_mapping`でインデックス対象のノーマライザーが指定されな"
"かったときに使われる全文検索インデックス用のノーマライザーです。"

msgid ""
"  * `regexp_search_normalizer`: Normalizer that is used for regular expression"
" search index when `normalizers_mapping` doesn't specify normalizer for the in"
"dex target."
msgstr ""
"  * `regexp_search_normalizer`: `normalizers_mapping`でインデックス対象のノーマライザーが指定されなかっ"
"たときに使われる正規表現検索インデックス用のノーマライザーです。"

msgid ""
"  * `prefix_search_normalizer`: Normalizer that is used for prefix search inde"
"x when `normalizers_mapping` doesn't specify normalizer for the index target."
msgstr ""
"  * `prefix_search_normalizer`: `normalizers_mapping`でインデックス対象のノーマライザーが指定されなかっ"
"たときに使われる前方一致検索インデックス用のノーマライザーです。"

msgid ""
"  * `normalizers_mapping`: You can specify normalizer for the specified index "
"target."
msgstr "  * `normalizers_mapping`：指定したインデックス対象用のノーマライザーを指定できます。"

msgid ""
"You can disable normalizer by specifying empty value such as `normalizers=''`."
" If you disable normalizer, you can search column value only by the original c"
"olumn value. If normalizer increases noise, it's useful."
msgstr ""
"`normalizers=''`のように空の値を指定するとノーマライザーを無効にすることができます。ノーマライザーを無効にすると元のカラムの値そのものでだけ"
"検索できます。もし、ノーマライザーを使うことで誤ヒットが増える場合は無効にした方がよいでしょう。"

msgid "Here is an example to disable normalizer:"
msgstr "ノーマライザーを無効にする方法は次の通りです。"

msgid ""
"CREATE INDEX pgroonga_tag_index\n"
"          ON memos\n"
"       USING pgroonga (tag)\n"
"        WITH (normalizers='');\n"
"```"
msgstr ""

msgid ""
"You can specify normalizer options by `normalizers='${NORMALIZER_NAME}(...)'` "
"syntax."
msgstr "`normalizers='${NORMALIZER_NAME}(...)'`という構文でノーマライザーのオプションを指定できます。"

msgid ""
"Here is an example to use `NormalizerNFKC100` normalizer with `\"unify_kana\"` a"
"nd `true` options:"
msgstr "以下は`\"unify_kana\"`オプションと`true`オプションを指定して`NormalizerNFKC100`ノーマライザーを使う例です。"

msgid ""
"CREATE INDEX pgroonga_tag_index\n"
"          ON memos\n"
"       USING pgroonga (tag)\n"
"        WITH (normalizers='NormalizerNFKC100(\"unify_kana\", true)');\n"
"```"
msgstr ""

msgid ""
"You can specify multiple normalizers by `normalizers='${NORMALIZER_NAME1}(...)"
", ${NORMALISER_NAME2(...), ...'` syntax."
msgstr ""
"`normalizers='${NORMALIZER_NAME1}(...), ${NORMALISER_NAME2(...), ...'`という構文で複数"
"のノーマライザーを指定できます。"

msgid "It's available since 2.3.1."
msgstr "2.3.1から使えます。"

msgid ""
"Here is a useless example to use `NormalizerNFKC130` normalizer with `\"unify_k"
"ana\"` and `true` option and `NormalizerNFKC130` with `\"unify_hyphen\"` and `tru"
"e` option:"
msgstr ""
"以下は`\"unify_kana\"`が`true`というオプション付きの`NormalizerNFKC130`ノーマライザーと`\"unify_hyphen\"`"
"が`true`というオプション付きの`NormalizerNFKC130`ノーマライザーを使う実用的ではない例です。"

msgid ""
"CREATE INDEX pgroonga_tag_index\n"
"          ON memos\n"
"       USING pgroonga (tag)\n"
"        WITH (normalizers='\n"
"                NormalizerNFKC130(\"unify_kana\", true),\n"
"                NormalizerNFKC130(\"unify_hyphen\", true)\n"
"              ');\n"
"```"
msgstr ""

msgid "See [Normalizers][groonga-normalizers] for other normalizers."
msgstr "他のノーマライザーについては[ノーマライザー][groonga-normalizers]を参照してください。"

msgid ""
"You can use other custom normalizer for full text search, regular expression s"
"earch and prefix search separately. Here are sample operator classes for them:"
msgstr "全文検索・正規表現検索・前方一致検索それぞれに別のノーマライザーを使うこともできます。これらの検索用の代表的な演算子クラスは次の通りです。"

msgid ""
"  * Full text search: [`pgroonga_text_full_text_search_ops_v2`][text-full-text"
"-search-ops-v2]"
msgstr ""
"  * 全文検索：[`pgroonga_text_full_text_search_ops_v2`][text-full-text-search-ops-v"
"2]"

msgid ""
"  * Regular expression search: [`pgroonga_text_regexp_ops_v2`][text-regexp-ops"
"-v2]"
msgstr "  * 正規表現検索：[`pgroonga_text_regexp_ops_v2`][text-regexp-ops-v2]"

msgid ""
"  * Prefix search: [`pgroonga_text_term_search_ops_v2`][text-term-search-ops-v"
"2]"
msgstr "  * 前方一致検索：[`pgroonga_text_term_search_ops_v2`][text-term-search-ops-v2]"

msgid ""
"You can use different normalizer for each search operations by the following p"
"arameters."
msgstr "次のパラメーターを使うことでそれぞれの検索方法ごとに異なるノーマライザーを使えます。"

msgid "  * Full text search: `full_text_search_normalizer`"
msgstr "  * 全文検索：`full_text_search_normalizer`"

msgid "  * Regular expression search: `regexp_search_normalizer`"
msgstr "  * 正規表現検索：`regexp_search_normalizer`"

msgid "  * Prefix search: `prefix_search_normalizer`"
msgstr "  * 前方一致検索：`prefix_search_normalizer`"

msgid "If they aren't used, the `normalizers` parameter is used as fallback."
msgstr "これらのパラメーターを使っていない場合は`normalizers`パラメーターの値を使います。"

msgid "Here is an example to disable normalizer only for full text search:"
msgstr "以下は全文検索用のインデックスだけノーマライザーを無効にする例です。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  title text,\n"
"  content text,\n"
"  tag text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (\n"
"               title pgroonga_text_full_text_search_ops_v2,\n"
"               content pgroonga_text_regexp_ops_v2,\n"
"               tag pgroonga_text_term_search_ops_v2\n"
"             )\n"
"        WITH (full_text_search_normalizer='',\n"
"              normalizers='NormalizerAuto');\n"
"```"
msgstr ""

msgid ""
"The index for `title` is for full text search. It doesn't use normalizer becau"
"se `full_text_search_normalizer` is `''`. Other indexes use `NormalizerAuto` b"
"ecause `normalizer` is `'NormalizerAuto'`."
msgstr ""
"`title`のインデックスは全文検索用です。`full_text_search_normalizer`が`''`なので、このインデックスはノーマライザーを"
"使いません。`normalizer`が`'NormalizerAuto'`なので、他のインデックスは`NormalizerAuto`を使います。"

msgid "Here is an example to disable normalizer only for regular expression search:"
msgstr "以下は正規表現検索用のインデックスだけノーマライザーを無効にする例です。"

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (\n"
"               title pgroonga_text_full_text_search_ops_v2,\n"
"               content pgroonga_text_regexp_ops_v2,\n"
"               tag pgroonga_text_term_search_ops_v2\n"
"             )\n"
"        WITH (regexp_search_normalizer='',\n"
"              normalizers='NormalizerAuto');\n"
"```"
msgstr ""

msgid ""
"The index for `content` is for regular expression search. It doesn't use norma"
"lizer because `regexp_search_normalizer` is `''`. Other indexes use `Normalize"
"rAuto` because `normalizers` is `'NormalizerAuto'`."
msgstr ""
"`content`のインデックスは正規表現検索用です。`regular_expression_search_normalizer`が`''`なので、このイン"
"デックスはノーマライザーを使いません。`normalizers`が`'NormalizerAuto'`なので、他のインデックスは`NormalizerAut"
"o`を使います。"

msgid "Here is an example to disable normalizer only for prefix search:"
msgstr "以下は前方一致検索用のインデックスだけノーマライザーを無効にする例です。"

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (\n"
"               title pgroonga_text_full_text_search_ops_v2,\n"
"               content pgroonga_text_regexp_ops_v2,\n"
"               tag pgroonga_text_term_search_ops_v2\n"
"             )\n"
"        WITH (prefix_search_normalizer='',\n"
"              normalizers='NormalizerAuto');\n"
"```"
msgstr ""

msgid ""
"The index for `tag` is for term search that includes prefix search. It doesn't"
" use normalizer because `prefix_search_normalizer` is `''`. Other indexes use "
"`NormalizerAuto` because `normalizers` is `'NormalizerAuto'`."
msgstr ""
"`tag`のインデックスは単語検索用です。単語検索は前方一致検索も含んでいます。`prefix_search_normalizer`が`''`なので、このイ"
"ンデックスはノーマライザーを使いません。`normalizers`が`'NormalizerAuto'`なので、他のインデックスは`NormalizerAu"
"to`を使います。"

msgid ""
"You can use `normalizers_mapping='${MAPPING_IN_JSON}'` to specify normalizers "
"for the specified index targets."
msgstr "`normalizers_mapping='${MAPPING_IN_JSON}'`を使うと指定したインデックス対象用のノーマライザーを指定できます。"

msgid "Here is the syntax of `${MAPPING_IN_JSON}`:"
msgstr "以下は`${MAPPING_IN_JSON}`の構文です。"

msgid ""
"```json\n"
"{\n"
"  \"${index_target_name1}\": \"${normalizer1}\",\n"
"  \"${index_target_name2}\": \"${normalizer2}\",\n"
"  ...\n"
"}\n"
"```"
msgstr ""

msgid ""
"Here is an example to use `NormalizerNFKC130(\"unify_kana\", true)` normalizer f"
"or `title`, `NormalizerNFKC130(\"unify_hyphen\", true)` normalizer for `content`"
" and `NormalizerAuto` for other columns:"
msgstr ""
"以下の例では`title`に`NormalizerNFKC130(\"unify_kana\", true)`ノーマライザー、`content`に`Normal"
"izerNFKC130(\"unify_hyphen\", true)`ノーマライザー、それ以外のカラムに`NormalizerAuto`を指定しています。"

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (\n"
"               title pgroonga_text_full_text_search_ops_v2,\n"
"               content pgroonga_text_regexp_ops_v2,\n"
"               tag pgroonga_text_term_search_ops_v2\n"
"             )\n"
"        WITH (normalizers_mapping='{\n"
"                \"title\": \"NormalizerNFKC130(\\\"unify_kana\\\", true)\",\n"
"                \"content\": \"NormalizerNFKC130(\\\"unify_hyphen\\\", true)\"\n"
"              }',\n"
"              normalizers='NormalizerAuto');\n"
"```"
msgstr ""

msgid ""
"You can use `${table:PGROONGA_INDEX_NAME}` syntax in text that specifies norma"
"lizers."
msgstr "ノーマライザーを指定するテキスト中で`${table:PGROONGA_INDEX_NAME}`という構文を使えます。"

msgid ""
"It's substituted with table name in Groonga corresponding to the PGroonga's in"
"dex specified as `PGROONGA_INDEX_NAME`. This is useful for [`NormalizerTable`]"
"[groonga-normalizer-table] that requires table and column names in Groonga."
msgstr ""
"この値は`PGROONGA_INDEX_NAME`で指定したPGroongaのインデックスに対応するGroongaのテーブル名に置換されます。これは[`No"
"rmalizerTable`][groonga-normalizer-table]を使うときに便利です。`NormalizerTable`はGroongaの"
"テーブル名・カラム名を使うからです。"

msgid ""
"Here is an example to use `NormalizerNFKC130` normalizer and `NormalizerTable`"
" normalizer:"
msgstr "以下は`NormalizerNFKC130`ノーマライザーと`NormalizerTable`ノーマライザーを使う例です。"

msgid ""
"```sql\n"
"CREATE TABLE normalizations (\n"
"  target text,\n"
"  normalized text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgrn_normalizations_index ON normalizations\n"
" USING pgroonga (target pgroonga_text_term_search_ops_v2,\n"
"                 normalized);"
msgstr ""

msgid ""
"INSERT INTO normalizations VALUES ('o', '0');\n"
"INSERT INTO normalizations VALUES ('ss', '55');"
msgstr ""

msgid ""
"CREATE TABLE memos (\n"
"  id integer,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (content)\n"
"        WITH (normalizers='\n"
"                NormalizerNFKC130,\n"
"                NormalizerTable(\n"
"                  \"normalized\", \"${table:pgrn_normalizations_index}.normalized"
"\",\n"
"                  \"target\", \"target\"\n"
"                )\n"
"             ');"
msgstr ""

msgid ""
"INSERT INTO memos VALUES (1, '0123455');\n"
"INSERT INTO memos VALUES (2, 'o1234ss');"
msgstr ""

msgid ""
"SELECT * FROM memos WHERE content &@~ 'o123455';\n"
"--  id | content \n"
"-- ----+---------\n"
"--   1 | 0123455\n"
"--   2 | o1234ss\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid ""
"Note that you need to run `REINDEX INDEX pgroonga_memos_index` after you chang"
"e `normalizations` table. Because normalization results are changed after `nor"
"malizations` table is changed."
msgstr ""
"`normalizations`テーブルを変更した後は`REINDEX INDEX pgroonga_memos_index`を実行しないといけないことに注"
"意してください。なぜなら`normalizations`テーブルが変わるとノーマライズ結果も変わるからです。"

msgid "#### How to use token filters {#custom-token-filters}"
msgstr "#### トークンフィルターのカスタマイズ方法 {#custom-token-filter}"

msgid ""
"Specify `token_filters='${TOKEN_FILTER_1}, ${TOKEN_FILTER_2}, ..., ${TOKEN_FIL"
"TER_N}'` for using token filters."
msgstr ""
"トークンフィルターを使うには`token_filters='${トークンフィルター1}, ${トークンフィルター2}, ..., ${トークンフィルターN}"
"'`を指定します。"

msgid ""
"Groonga doesn't provide any token filters by default. All token filters are pr"
"ovided as plugins. You need to register plugins to use token filters."
msgstr ""
"Groongaはデフォルトでは1つもトークンフィルターを提供していません。すべてのトークンフィルターはプラグインとして提供しています。トークンフィルターを使"
"う場合はプラグインを登録する必要があります。"

msgid ""
"Here is an example to use `TokenFilterStem` token filter that is included in `"
"token_filters/stem` plugin:"
msgstr "以下は`token_filters/stem`プラグインに含まれている`TokenFilterStem`トークンフィルターを使う例です。"

msgid ""
"Note that you must specify `plugins` before `token_filters`. These `CREATE IND"
"EX` options are processed by the specified order. Plugins must be registered b"
"efore you use token filters."
msgstr ""
"`token_filters`より前に`plugins`を指定しなければいけないことに注意してください。`CREATE INDEX`に指定したオプションは指"
"定した順に処理されます。トークンフィルターを使う前にプラグインを登録しておく必要があります。"

msgid "See [Token filters][groonga-token-filters] for other token filters."
msgstr "他のトークンフィルターについては[トークンフィルター][groonga-token-filters]を参照してください。"

msgid "#### How to customize tablespace {#custom-tablespace}"
msgstr "#### テーブルスペースのカスタマイズ方法 {#custom-tablespace}"

msgid "Since 1.1.6."
msgstr "1.1.6で追加。"

msgid ""
"Specify `TABLESPACE ${TABLESPACE_NAME}` for customizing [tablespace][postgresq"
"l-tablespace]. If you have fast storage, you may want to change tablespace for"
" PGroonga indexes."
msgstr ""
"[テーブルスペース][postgresql-tablespace]をカスタマイズするには`TABLESPACE ${TABLESPACE_NAME}`を指定"
"してください。もし高速なストレージがある場合は、テーブルスペースを変更してそのストレージにPGroongaのインデックスを置きたくなるかもしれません。"

msgid "Here is an example to change tablespace:"
msgstr "以下はテーブルスペースを変更する例です。"

msgid ""
"```sql\n"
"CREATE TABLESPACE fast LOCATION '/data/fast_disk';"
msgstr ""

msgid ""
"CREATE TABLE memos (\n"
"  id integer,\n"
"  tag text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tag_index\n"
"          ON memos\n"
"       USING pgroonga (tag)\n"
"  TABLESPACE fast;\n"
"```"
msgstr ""

msgid "#### How to customize lexicon type {#custom-lexicon-type}"
msgstr "#### 語彙表の種類のカスタマイズ方法 {#custom-lexicon-type}"

msgid "Since 2.0.6."
msgstr "2.0.6で追加。"

msgid "Specify `lexicon_type='${LEXICON_TYPE}'` for customizing lexicon type."
msgstr "語彙表の種類をカスタマイズするには`lexicon_type='${LEXICON_TYPE}'`を指定します。"

msgid "Here are available lexicon types:"
msgstr "利用可能な語彙表の種類は次の通りです。"

msgid "  * [`hash_table`][groonga-table-hash-table]"
msgstr ""

msgid "  * [`patricia_trie`][groonga-table-patricia-trie]"
msgstr ""

msgid "    * Default"
msgstr "    * デフォルト"

msgid "  * [`double_array_trie`][groonga-table-double-array-trie]"
msgstr ""

msgid ""
"Normally, you don't need to customize this because the default value is suitab"
"le for most cases."
msgstr "通常、これをカスタマイズする必要はありません。なぜなら多くの場合はデフォルト値が適切だからです。"

msgid ""
"Here is an example to use `hash_table` lexicon type to disable predictive toke"
"n search:"
msgstr "以下はトークンの前方一致検索を無効にするために語彙表の種類を`hash_table`にする例です。"

msgid ""
"CREATE INDEX pgroonga_content_index\n"
"          ON memos\n"
"       USING pgroonga (content)\n"
"        WITH (lexicon_type='hash_table');\n"
"```"
msgstr ""

msgid "#### How to use `column:...` syntax in query {#query-allow-column}"
msgstr "#### クエリーで`column:...`構文を使う方法 {#query-allow-column}"

msgid "Since 2.1.3."
msgstr "2.1.3で追加。"

msgid "Specify `query_allow_column=true` to use `column:...` syntax in query."
msgstr "クエリー中で`column:...`構文を使うには`query_allow_column=true`を指定します。"

msgid ""
"If you use `column:...` syntax, you can use other columns and not only match o"
"perations but also other operations."
msgstr "`column:...`構文を使うと、他のカラムを使ったり、マッチ以外の演算子も使うことができます。"

msgid ""
"Note that `column:...` syntax doesn't work with sequential search. It works on"
"ly with index search."
msgstr "`column:...`構文はシーケンシャルサーチでは動かないことに注意してください。インデックスサーチでしか動きません。"

msgid ""
"Here is an example to use `query_allow_column` to use other column in the same"
" index:"
msgstr "以下は同じインデックス内の他のカラムを使うために`query_allow_column`を使う例です。"

msgid ""
"```sql\n"
"DROP TABLE IF EXISTS memos;\n"
"CREATE TABLE memos (\n"
"  title text,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_memo_texts_index\n"
"          ON memos\n"
"       USING pgroonga (title, content)\n"
"        WITH (query_allow_column=true);"
msgstr ""

msgid ""
"INSERT INTO memos VALUES\n"
"  ('PGroonga = PostgreSQL + Groonga', 'Very fast full text search extension.')"
",\n"
"  ('PostGIS', 'GIS extension.');"
msgstr ""

msgid ""
"SELECT *\n"
"  FROM memos\n"
"    -- The content column must have 'extension' and\n"
"    -- the title column must have 'Groonga'.\n"
" WHERE content &@~ 'extension title:@Groonga';\n"
"--               title              |                content                \n"
"-- ---------------------------------+---------------------------------------\n"
"--  PGroonga = PostgreSQL + Groonga | Very fast full text search extension.\n"
"-- (1 row)\n"
"```"
msgstr ""
"SELECT *\n"
"  FROM memos\n"
"    -- contentカラムは'extension'を含んでいて、かつ、\n"
"    -- titleカラムは'Groonga'を含んでいなければいけない。\n"
" WHERE content &@~ 'extension title:@Groonga';\n"
"--               title              |                content                \n"
"-- ---------------------------------+---------------------------------------\n"
"--  PGroonga = PostgreSQL + Groonga | Very fast full text search extension.\n"
"-- (1 row)\n"
"```"

msgid "Here is an example to use `query_allow_column` to use other operation:"
msgstr "以下は他の演算を使うために`query_allow_column`を使う例です。"

msgid ""
"```sql\n"
"DROP TABLE IF EXISTS memos;\n"
"CREATE TABLE memos (\n"
"  title text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_title_index\n"
"          ON memos\n"
"       USING pgroonga (title)\n"
"        WITH (query_allow_column=true);"
msgstr ""

msgid ""
"INSERT INTO memos VALUES ('PGroonga');\n"
"INSERT INTO memos VALUES ('PGroonga = PostgreSQL + Groonga');"
msgstr ""

msgid ""
"SELECT *\n"
"  FROM memos\n"
"    -- The title column must equal to 'PGroonga'.\n"
"    -- Note that this operation doesn't use index.\n"
" WHERE title &@~ 'title:PGroonga';\n"
"--   title   \n"
"-- ----------\n"
"--  PGroonga\n"
"-- (1 row)\n"
"```"
msgstr ""
"SELECT *\n"
"  FROM memos\n"
"    -- titleカラムは'PGroonga'でなければいけない。\n"
"    -- この演算はインデックスを使わないことに注意すること。\n"
" WHERE title &@~ 'title:PGroonga';\n"
"--   title   \n"
"-- ----------\n"
"--  PGroonga\n"
"-- (1 row)\n"
"```"

msgid "See [Groonga's query syntax][groonga-query-syntax] for available operations."
msgstr "使える演算は[Groongaのクエリー構文][groonga-query-syntax]を参照してください。"

msgid "#### How to customize index column flags {#custom-index-flags}"
msgstr "#### インデックスカラムフラグのカスタマイズ方法 {#custom-index-flags}"

msgid "Since 2.3.2."
msgstr "2.3.2で追加。"

msgid ""
"Specify `index_flags_mappings='${MAPPING_IN_JSON}'` for customizing index colu"
"mn flags for the specified index target."
msgstr ""
"指定したインデックス対象のインデックスカラムフラグをカスタマイズするには`index_flags_mappings='${MAPPING_IN_JSON}'"
"`を指定します。"

msgid ""
"```json\n"
"{\n"
"  \"${index_target_name1}\": \"${flags1}\",\n"
"  \"${index_target_name2}\": \"${flags2}\",\n"
"  ...\n"
"}\n"
"```"
msgstr ""

msgid ""
"Here are available index column flags that are corresponding to [flags in Groo"
"nga][groonga-index-column-flags]:"
msgstr "以下は利用可能なインデックスカラムのフラグです。それぞれ[Groongaのフラグ][groonga-index-column-flags]に対応しています。"

msgid "  * `SMALL`: `INDEX_SMALL` in Groonga"
msgstr "  * `SMALL`: Groongaでの`INDEX_SMALL`"

msgid "  * `MEDIUM`: `INDEX_MEDIUM` in Groonga"
msgstr "  * `MEDIUM`: Groongaでの`INDEX_MEDIUM`"

msgid "  * `LARGE`: `INDEX_LARGE` in Groonga"
msgstr "  * `LARGE`: Groongaでの`INDEX_LARGE`"

msgid "  * `WITH_WEIGHT`: `WITH_WEIGHT` in Groonga"
msgstr "  * `WITH_WEIGHT`: Groongaでの`WITH_WEIGHT`"

msgid "  * `WEIGHT_FLOAT32`: `WEIGHT_FLOAT32` in Groonga"
msgstr "  * `WEIGHT_FLOAT32`: Groongaでの`WEIGHT_FLOAT32`"

msgid ""
"You can specify multiple flags by separating with `|` such as `LARGE|WITH_WEIG"
"HT`. But you can't specify conflicted flags at once such as `SMALL|MEDIUM|LARG"
"E`."
msgstr ""
"`LARGE|WITH_WEIGHT`というように`|`で区切って複数のフラグを指定することができます。しかし、`SMALL|MEDIUM|LARGE`とい"
"うように競合するフラグを同時に指定することはできません。"

msgid "Here is an example to use large index column for large data:"
msgstr "以下は大量データのために大きいインデックスカラムを使う例です。"

msgid ""
"CREATE INDEX pgroonga_content_index\n"
"          ON memos\n"
"       USING pgroonga (content)\n"
"        WITH (index_flags_mapping='{\n"
"                \"content\": \"LARGE\"\n"
"              }');\n"
"```"
msgstr ""

msgid "[query-v2]:operators/query-v2.html"
msgstr ""

msgid ""
"[groonga-token-bigram]:http://groonga.org/docs/reference/tokenizers.html#token"
"-bigram"
msgstr ""
"[groonga-token-bigram]:http://groonga.org/ja/docs/reference/tokenizers.html#to"
"ken-bigram"

msgid ""
"[groonga-normalizer-auto]:http://groonga.org/docs/reference/normalizers.html#n"
"ormalizer-auto"
msgstr ""
"[groonga-normalizer-auto]:http://groonga.org/ja/docs/reference/normalizers.htm"
"l#normalizer-auto"

msgid ""
"[groonga-table-patricia-trie]:http://groonga.org/docs/reference/tables.html#ta"
"ble-pat-key"
msgstr ""
"[groonga-table-patricia-trie]:http://groonga.org/ja/docs/reference/tables.html"
"#table-pat-key"

msgid ""
"[groonga-table-hash-table]:http://groonga.org/docs/reference/tables.html#table"
"-hash-key"
msgstr ""
"[groonga-table-hash-table]:http://groonga.org/ja/docs/reference/tables.html#ta"
"ble-hash-key"

msgid ""
"[groonga-table-double-array-trie]:http://groonga.org/docs/reference/tables.htm"
"l#table-dat-key"
msgstr ""
"[groonga-table-double-array-trie]:http://groonga.org/ja/docs/reference/tables."
"html#table-dat-key"

msgid "[unicode-nfkc]:http://unicode.org/reports/tr15/"
msgstr ""

msgid "[mecab]:http://taku910.github.io/mecab/"
msgstr ""

msgid ""
"[groonga-token-mecab]:http://groonga.org/docs/reference/tokenizers.html#token-"
"mecab"
msgstr ""
"[groonga-token-mecab]:http://groonga.org/ja/docs/reference/tokenizers.html#tok"
"en-mecab"

msgid ""
"[groonga-token-delimit]:http://groonga.org/docs/reference/tokenizers.html#toke"
"n-delimit"
msgstr ""
"[groonga-token-delimit]:http://groonga.org/ja/docs/reference/tokenizers.html#t"
"oken-delimit"

msgid "[groonga-tokenizers]:http://groonga.org/docs/reference/tokenizers.html"
msgstr "[groonga-tokenizers]:http://groonga.org/ja/docs/reference/tokenizers.html"

msgid "[groonga-normalizers]:http://groonga.org/docs/reference/normalizers.html"
msgstr "[groonga-normalizers]:http://groonga.org/ja/docs/reference/normalizers.html"

msgid ""
"[groonga-normalizer-table]:https://groonga.org/docs/reference/normalizers/norm"
"alizer_table.html"
msgstr ""
"[groonga-normalizer-table]:https://groonga.org/ja/docs/reference/normalizers/n"
"ormalizer_table.html"

msgid "[groonga-token-filters]:http://groonga.org/docs/reference/token_filters.html"
msgstr ""
"[groonga-token-filters]:http://groonga.org/ja/docs/reference/token_filters.htm"
"l"

msgid ""
"[postgresql-tablespace]:{{ site.postgresql_doc_base_url.en }}/manage-ag-tables"
"paces.html"
msgstr ""
"[postgresql-tablespace]:{{ site.postgresql_doc_base_url.ja }}/manage-ag-tables"
"paces.html"

msgid "[text-full-text-search-ops-v2]:./#text-full-text-search-ops-v2"
msgstr ""

msgid "[text-regexp-ops-v2]:./#text-regexp-ops-v2"
msgstr ""

msgid "[text-term-search-ops-v2]:./#text-term-search-ops-v2"
msgstr ""

msgid ""
"[groonga-query-syntax]:http://groonga.org/docs/reference/grn_expr/query_syntax"
".html"
msgstr ""
"[groonga-query-syntax]:http://groonga.org/ja/docs/reference/grn_expr/query_syn"
"tax.html"

msgid ""
"[groonga-index-column-flags]:https://groonga.org/docs/reference/commands/colum"
"n_create.html#flags"
msgstr ""
"[groonga-index-column-flags]:https://groonga.org/ja/docs/reference/commands/co"
"lumn_create.html#flags"
