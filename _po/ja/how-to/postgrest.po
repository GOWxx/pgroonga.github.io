msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=; plural=;\n"

msgid ""
"---\n"
"title: How to use PGroonga with PostgREST\n"
"---"
msgstr ""

msgid "# How to use PGroonga with PostgREST"
msgstr ""

msgid ""
"Create data in PostgreSQL, provide it as an API using PostgREST, and then easi"
"ly create an **\"API for convenient data search\"**. This is a beginner's guide "
"to PostgREST with PGroonga."
msgstr ""

msgid ""
"## Prepare data on the PostgreSQL side\n"
"Here, we will use PostgreSQL, which is usually available on most computers😏"
msgstr ""

msgid ""
"```sh\n"
"createdb api\n"
"psql api\n"
"```"
msgstr ""

msgid ""
"## Create a table and create suitable indexes\n"
"To make use of the convenient features of PGroonga, creating indexes that matc"
"h the features is crucial."
msgstr ""

msgid ""
"In this example, we will create a memo table and create indexes that enable th"
"e following search functionalities for each column:"
msgstr ""

msgid ""
"- Treating hiragana and katakana as equivalent (searching for \"あっぷる\" will matc"
"h both \"あっぷる\" and \"アップル\").\n"
"- Treating hiragana, katakana, and romaji as equivalent (searching for \"de-tab"
"e-su\" will match \"de-tabe-su,\" \"でーたべーす,\" and \"データベース\").\n"
"- Treating various long vowel marks as equivalent (treating similar long vowel"
" marks, such as \"-˗֊‐‑‒–⁃⁻₋− ﹣－ ー—―─━ｰ,\" as the same for easier searching)."
msgstr ""

msgid "Now, let's try it out!"
msgstr ""

msgid ""
"```sql\n"
"CREATE EXTENSION IF NOT EXISTS pgroonga;"
msgstr ""

msgid ""
"CREATE TABLE memos (\n"
"  id integer,\n"
"  title text,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"-- Please don't mind the randomness of the sample text 😗\n"
"INSERT INTO memos VALUES (1, 'PostgreSQLはリレーショナル・データベース管理システムです。','すごいでしょう');\n"
"INSERT INTO memos VALUES (2, 'Groongaは日本語対応の高速な全文検索エンジンです。','スワイショウ');\n"
"INSERT INTO memos VALUES (3, 'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です"
"。','ハバナイスデー');\n"
"INSERT INTO memos VALUES (4, 'groongaコマンドがあります。','今日はコンバンワこのくにわ');"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_title_search_index ON memos USING pgroonga (title) \n"
"  WITH (\n"
"    normalizers = 'NormalizerNFKC150\n"
"      (\n"
"        \"unify_kana\", true,\n"
"        \"unify_to_romaji\", true,\n"
"        \"unify_hyphen_and_prolonged_sound_mark\", true\n"
"      )',\n"
"    tokenizer = 'TokenNgram(\"unify_symbol\", false, \"unify_alphabet\", false, \"u"
"nify_digit\", false)'\n"
"  );"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_content_search_index ON memos USING pgroonga (content) \n"
"  WITH (\n"
"    normalizers = 'NormalizerNFKC150\n"
"      (\n"
"        \"unify_kana\", true,\n"
"        \"unify_to_romaji\", true,\n"
"        \"unify_hyphen_and_prolonged_sound_mark\", true\n"
"      )',\n"
"    tokenizer = 'TokenBigramSplitSymbolAlphaDigit'\n"
"  );\n"
"```"
msgstr ""

msgid "## Prepare PostgREST permissions"
msgstr ""

msgid "To create the necessary permissions for PostgREST, you can follow these steps:"
msgstr ""

msgid ""
"```sql\n"
"create role web_user nologin;\n"
"grant usage on schema public to web_user;\n"
"grant select on memos to web_user;"
msgstr ""

msgid ""
"create role authenticator noinherit login password 'mypassword';\n"
"grant web_user to authenticator;\n"
"```"
msgstr ""

msgid ""
"## Configure PostgREST\n"
"```sh\n"
"vi memo.conf\n"
"```"
msgstr ""

msgid ""
"Inside of the file:\n"
"```vim\n"
"db-uri = \"postgres://authenticator:mypassword@localhost:5432/api\"\n"
"db-schemas = \"public\"\n"
"db-anon-role = \"web_user\"\n"
"```"
msgstr ""

msgid "## Start PostgREST"
msgstr ""

msgid ""
"```sh\n"
"postgrest memo.conf\n"
"```"
msgstr ""

msgid ""
"Oh, for the installation method of PostgREST, please refer to https://postgres"
"t.org/en/stable/explanations/install.html 😉"
msgstr ""

msgid ""
"## Access the URL\n"
"Open your browser and access the following:"
msgstr ""

msgid "http://localhost:3000/memos"
msgstr ""

msgid "Result:"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":1,\"title\":\"PostgreSQLはリレーショナル・データベース管理システムです。\",\"content\":\"すごいでしょう\"}, \n"
" {\"id\":2,\"title\":\"Groongaは日本語対応の高速な全文検索エンジンです。\",\"content\":\"スワイショウ\"}, \n"
" {\"id\":3,\"title\":\"PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\",\"content\""
":\"ハバナイスデー\"}, \n"
" {\"id\":4,\"title\":\"groongaコマンドがあります。\",\"content\":\"今日はコンバンワこのくにわ\"}]\n"
"```"
msgstr ""

msgid ""
"What? Is it really this easy to have a working REST API endpoint? It's too con"
"venient! 🤯"
msgstr ""

msgid ""
"(However, please note that due to the permissions set up in this case, you can"
" only perform `SELECT` operations. So, you can search but not add, modify, or "
"delete data. 😏)"
msgstr ""

msgid ""
"## Regular LIKE search\n"
"This is the method to perform a `LIKE` search using the standard functionality"
" of PostgreSQL."
msgstr ""

msgid ""
"(By the way, normally, indexes do not work for PostgreSQL's partial match, but"
" if you create an index with PGroonga, it will work. It's like magic! 👀)"
msgstr ""

msgid "### Search by title"
msgstr ""

msgid "Open your browser and access the following:"
msgstr ""

msgid ""
"[`http://localhost:3000/memos?title=like.*データ*`](http://localhost:3000/memos?t"
"itle=like.*データ*)"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":1,\"title\":\"PostgreSQLはリレーショナル・データベース管理システムです。\",\"content\":\"すごいでしょう\"}]\n"
"```"
msgstr ""

msgid "### Search by content"
msgstr ""

msgid ""
"[`http://localhost:3000/memos?content=like.*ショウ*`](http://localhost:3000/memos"
"?content=like.*ショウ*)"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":2,\"title\":\"Groongaは日本語対応の高速な全文検索エンジンです。\",\"content\":\"スワイショウ\"}]\n"
"```\n"
"☝️ With the standard LIKE search functionality, searching for 'ショウ' in katakan"
"a will not match hiragana."
msgstr ""

msgid "## Searching with PGroonga"
msgstr ""

msgid ""
"Now, since the operators `&@~` required for searching with PGroonga are not di"
"rectly available in PostgREST, we will create a stored function to enable thei"
"r usage."
msgstr ""

msgid ""
"```sh\n"
"psql api\n"
"```"
msgstr ""

msgid "Execute the following SQL statement:"
msgstr ""

msgid ""
"```sql\n"
"CREATE FUNCTION find_title(keywords text) RETURNS SETOF memos AS $$\n"
"BEGIN\n"
"  RETURN QUERY SELECT * FROM memos WHERE title &@~ keywords;\n"
"END;\n"
"$$ LANGUAGE plpgsql;"
msgstr ""

msgid ""
"CREATE FUNCTION find_content(keywords text) RETURNS SETOF memos AS $$\n"
"BEGIN\n"
"  RETURN QUERY SELECT * FROM memos WHERE content &@~ keywords;\n"
"END;\n"
"$$ LANGUAGE plpgsql;\n"
"```"
msgstr ""

msgid ""
"## Searching with PGroonga in PostgREST\n"
"When calling stored functions in PostgREST, the URL format is `/rpc/function_n"
"ame`."
msgstr ""

msgid ""
"[`http://localhost:3000/rpc/find_title?keywords=コマンド`](http://localhost:3000/r"
"pc/find_title?keywords=コマンド)"
msgstr ""

msgid ""
"The following results will be returned.\n"
"```json\n"
"[{\"id\":4,\"title\":\"groongaコマンドがあります。\",\"content\":\"今日はコンバンワこのくにわ\"}]\n"
"```"
msgstr ""

msgid ""
"By the way, using a browser to hit the URL is easier than using curl because d"
"ealing with encoding can be cumbersome."
msgstr ""

msgid ""
"```console\n"
"$ curl --get --data-urlencode keywords=コマンド http://localhost:3000/rpc/find_tit"
"le\n"
"[{\"id\":4,\"title\":\"groongaコマンドがあります。\",\"content\":\"今日はコンバンワこのくにわ\"}]\n"
"```"
msgstr ""

msgid "### Search in romaji"
msgstr ""

msgid ""
"[`http://localhost:3000/rpc/find_title?keywords=desu`](http://localhost:3000/r"
"pc/find_title?keywords=desu)"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":1,\"title\":\"PostgreSQLはリレーショナル・データベース管理システムです。\",\"content\":\"すごいでしょう\"}, \n"
" {\"id\":2,\"title\":\"Groongaは日本語対応の高速な全文検索エンジンです。\",\"content\":\"スワイショウ\"}, \n"
" {\"id\":3,\"title\":\"PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\",\"content\""
":\"ハバナイスデー\"}]\n"
"```"
msgstr ""

msgid "### Searching hiragana and katakana in hiragana or katakana"
msgstr ""

msgid ""
"[`http://localhost:3000/rpc/find_content?keywords=ショウ`](http://localhost:3000/"
"rpc/find_content?keywords=ショウ)"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":1,\"title\":\"PostgreSQLはリレーショナル・データベース管理システムです。\",\"content\":\"すごいでしょう\"}, \n"
" {\"id\":2,\"title\":\"Groongaは日本語対応の高速な全文検索エンジンです。\",\"content\":\"スワイショウ\"}]\n"
"```"
msgstr ""

msgid "### AND search"
msgstr ""

msgid ""
"[`http://localhost:3000/rpc/find_title?keywords=nga です`](http://localhost:3000"
"/rpc/find_title?keywords=nga%20です)"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":2,\"title\":\"Groongaは日本語対応の高速な全文検索エンジンです。\",\"content\":\"スワイショウ\"}, \n"
" {\"id\":3,\"title\":\"PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\",\"content\""
":\"ハバナイスデー\"}]\n"
"```"
msgstr ""

msgid "### OR search"
msgstr ""

msgid ""
"[`http://localhost:3000/rpc/find_title?keywords=nga OR です`](http://localhost:3"
"000/rpc/find_title?keywords=nga%20OR%20です)"
msgstr ""

msgid ""
"```json\n"
"[{\"id\":2,\"title\":\"Groongaは日本語対応の高速な全文検索エンジンです。\",\"content\":\"スワイショウ\"}, \n"
" {\"id\":3,\"title\":\"PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\",\"content\""
":\"ハバナイスデー\"}, \n"
" {\"id\":4,\"title\":\"groongaコマンドがあります。\",\"content\":\"今日はコンバンワこのくにわ\"}, \n"
" {\"id\":1,\"title\":\"PostgreSQLはリレーショナル・データベース管理システムです。\",\"content\":\"すごいでしょう\"}]\n"
"```"
msgstr ""

msgid ""
"## Bonus\n"
"When you want to allow various additional searches, you can create multiple st"
"ored functions."
msgstr ""

msgid "### Make target column customizable"
msgstr ""

msgid ""
"Here is an example of a stored function that performs a dynamic search by pass"
"ing the column name:"
msgstr ""

msgid ""
"```sql\n"
"CREATE OR REPLACE FUNCTION search_col(column_name text, keyword text)\n"
"  RETURNS SETOF memos\n"
"  LANGUAGE plpgsql\n"
"AS $$\n"
"BEGIN\n"
"  IF column_name IN ('title', 'content') THEN -- Check if the column name is v"
"alid\n"
"    RETURN QUERY EXECUTE format('SELECT * FROM memos WHERE %I &@~ ''%s''', col"
"umn_name, keyword);\n"
"  ELSE\n"
"    RAISE EXCEPTION 'Invalid column name'; -- Return an error if the column na"
"me is invalid\n"
"  END IF;\n"
"END;\n"
"$$;\n"
"CREATE FUNCTION\n"
"```"
msgstr ""

msgid "###  Search all columns"
msgstr ""

msgid "Stored function to search all columns with a keyword:"
msgstr ""

msgid ""
"```sql\n"
"CREATE OR REPLACE FUNCTION memo_search(keyword text)\n"
"  RETURNS SETOF memos\n"
"  LANGUAGE plpgsql\n"
"AS $$\n"
"BEGIN\n"
"  RETURN QUERY EXECUTE format('\n"
"    SELECT *\n"
"    FROM memos\n"
"    WHERE title &@~ $1 OR content &@~ $1\n"
"  ') USING keyword;\n"
"END;\n"
"$$;\n"
"```"
msgstr ""
