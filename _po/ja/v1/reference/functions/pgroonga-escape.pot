# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 12:18+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../../v1/reference/functions/pgroonga-escape.md:1
msgid "---\n"
"title: pgroonga.escape function\n"
"upper_level: ../\n"
"---"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:6
msgid "# `pgroonga.escape` function"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:8
msgid "Since 1.1.9."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:10
msgid "## Summary"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:12
msgid "`pgroonga.escape` function converts the given value to a literal for [script syntax](http://groonga.org/docs/reference/grn_expr/script_syntax.html). The literal is safely used in script syntax. Script syntax is used by [jsonb `@@` operator](../operators/jsonb-query.html) and so on."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:14
msgid "`pgroonga.escape` function is useful to prevent Groonga command injection via [`pgroonga.command` function](pgroonga-command.html). See also [`pgroonga.command_escape_value` function](pgroonga-command-escape-value.html) and [`pgroonga.query_escape` function](pgroonga-query-escape.html) for preventing Groonga command injection."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:16
msgid "## Syntax"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:18
msgid "Here is the syntax of this function:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:20
msgid "```text\n"
"text pgroonga.escape(value)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:24
msgid "`value` type is one of the following types:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:26
msgid "  * `text`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:28
msgid "  * `boolean`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:30
msgid "  * `int2`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:32
msgid "  * `int4`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:34
msgid "  * `int8`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:36
msgid "  * `float4`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:38
msgid "  * `float8`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:40
msgid "  * `timestamp`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:42
msgid "  * `timestamptz`"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:44
msgid "`value` is a literal to be used in [script syntax](http://groonga.org/docs/reference/grn_expr/script_syntax.html)."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:46
msgid "`pgroonga.query_escape` returns a `text` type value. The value can be used as a literal in script syntax safely."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:48
msgid "If `value` is a `text` type value, you can specify characters to be escaped like the following:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:50
msgid "```text\n"
"text pgroonga.escape(value, special_characters)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:54
msgid "`special_characters` is a `text` type value. It contains all characters to be escaped. If you want to escape \"(\" and \")\", you should specify `'()'`."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:56
msgid "## Usage"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:58
msgid "Here are sample schema and data:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:60
msgid "```sql\n"
"CREATE TABLE logs (\n"
"  message jsonb\n"
");"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:65
msgid "CREATE INDEX pgroonga_logs_index\n"
"          ON logs\n"
"       USING pgroonga (message);"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:69
msgid "INSERT INTO logs VALUES ('{\"body\": \"\\\"index.html\\\" not found\"}');\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:72
msgid "If you want to search `\"index.html\" not found`, you need to escape `\"` as `\\\"` like the following:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:74
msgid "```sql\n"
"SELECT * FROM logs\n"
" WHERE message @@ 'string @ \"\\\"index.html\\\" not found\"';\n"
"--                message                \n"
"-- --------------------------------------\n"
"--  {\"body\": \"\\\"index.html\\\" not found\"}\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:83
msgid "You can use `pgroonga.escape` function for it:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:85
msgid "```sql\n"
"SELECT * FROM logs\n"
" WHERE message @@ ('string @ ' || pgroonga.escape('\"index.html\" not found'));\n"
"--                message                \n"
"-- --------------------------------------\n"
"--  {\"body\": \"\\\"index.html\\\" not found\"}\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:94
msgid "`pgroonga.escape` function is also useful with [`pgroonga.command` function](pgroonga-command.html):"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:96
msgid "```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command('select',\n"
"                   ARRAY[\n"
"                     'table', pgroonga.table_name('pgroonga_logs_index'),\n"
"                     'output_columns', 'message.string',\n"
"                     'filter', 'message.string @ ' || pgroonga.escape('\"index.html\" not found')\n"
"                   ])::jsonb\n"
");\n"
"--                   jsonb_pretty                  \n"
"-- ------------------------------------------------\n"
"--  [                                             +\n"
"--      [                                         +\n"
"--          0,                                    +\n"
"--          1480435379.074671,                    +\n"
"--          0.0004425048828125                    +\n"
"--      ],                                        +\n"
"--      [                                         +\n"
"--          [                                     +\n"
"--              [                                 +\n"
"--                  1                             +\n"
"--              ],                                +\n"
"--              [                                 +\n"
"--                  [                             +\n"
"--                      \"message.string\",         +\n"
"--                      \"LongText\"                +\n"
"--                  ]                             +\n"
"--              ],                                +\n"
"--              [                                 +\n"
"--                  [                             +\n"
"--                      \"\",                       +\n"
"--                      \"\\\"index.html\\\" not found\"+\n"
"--                  ]                             +\n"
"--              ]                                 +\n"
"--          ]                                     +\n"
"--      ]                                         +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:136
msgid "You can use `pgroonga.escape` function for non `text` type value such as integer:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:138
msgid "```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command('select',\n"
"                   ARRAY[\n"
"                     'table', pgroonga.table_name('pgroonga_logs_index'),\n"
"                     'output_columns', '_id',\n"
"                     'filter', '_id == ' || pgroonga.escape(1)\n"
"                   ])::jsonb\n"
");\n"
"--           jsonb_pretty          \n"
"-- --------------------------------\n"
"--  [                             +\n"
"--      [                         +\n"
"--          0,                    +\n"
"--          1480435504.153011,    +\n"
"--          0.00009799003601074219+\n"
"--      ],                        +\n"
"--      [                         +\n"
"--          [                     +\n"
"--              [                 +\n"
"--                  1             +\n"
"--              ],                +\n"
"--              [                 +\n"
"--                  [             +\n"
"--                      \"_id\",    +\n"
"--                      \"UInt32\"  +\n"
"--                  ]             +\n"
"--              ],                +\n"
"--              [                 +\n"
"--                  1             +\n"
"--              ]                 +\n"
"--          ]                     +\n"
"--      ]                         +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:175
msgid "## See also"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:177
msgid "  * [`pgroonga.command` function](pgroonga-command.html)"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:179
msgid "  * [`pgroonga.command_escape_value` function](pgroonga-command-escape-value.html)"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-escape.md:181
msgid "  * [`pgroonga.query_escape` function](pgroonga-query-escape.html)"
msgstr ""

