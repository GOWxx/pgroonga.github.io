msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"---\n"
"title: \"&^ operator\"\n"
"upper_level: ../\n"
"---"
msgstr ""

msgid "# `&^` operator"
msgstr ""

msgid "Since 1.2.1."
msgstr ""

msgid "## Summary"
msgstr ""

msgid "`&^>` operator for `text[]` is deprecated since 1.2.1. Use `&^` operator instead."
msgstr ""

msgid "`&^` operator performs prefix search."
msgstr ""

msgid "Prefix search is useful for implementing input completion."
msgstr ""

msgid "## Syntax"
msgstr ""

msgid ""
"```sql\n"
"column &^ prefix\n"
"column &^ (prefix, NULL, index_name)::pgroonga_full_text_search_condition\n"
"```"
msgstr ""

msgid "The first signature is enough for most cases."
msgstr ""

msgid ""
"The second signature is for using custom normalizer even if PGroonga's index is used or not.\n"
"The second signature is available since 2.4.6."
msgstr ""

msgid "Here is the description of the first signature."
msgstr ""

msgid ""
"```sql\n"
"column &^ prefix\n"
"```"
msgstr ""

msgid "`column` is a column to be searched. It's `text` type or `text[]` type."
msgstr ""

msgid "`prefix` is a prefix to be found. It's `text` type."
msgstr ""

msgid "The operator returns `true` when the `column` value starts with `prefix`."
msgstr ""

msgid "Here is the description of the second signature."
msgstr ""

msgid ""
"```sql\n"
"column &^ (prefix, NULL, index_name)::pgroonga_full_text_search_condition\n"
"```"
msgstr ""

msgid "`column` is a column to be searched. It's `text` type or `varchar` type."
msgstr ""

msgid "The second argument is set only NULL. Because this syntax is not for optimizing search score."
msgstr ""

msgid "`index_name` is an index name of the corresponding PGroonga index. It's `text` type."
msgstr ""

msgid "It's for using the same search options specified in PGroonga index in sequential search."
msgstr ""

msgid "## Operator classes"
msgstr ""

msgid "You need to specify one of the following operator classes to use this operator:"
msgstr ""

msgid "  * `pgroonga_text_term_search_ops_v2`: For `text`"
msgstr ""

msgid "  * `pgroonga_text_array_term_search_ops_v2`: For `text[]`"
msgstr ""

msgid "  * `pgroonga_varchar_term_search_ops_v2`: For `varchar`"
msgstr ""

msgid "## Usage"
msgstr ""

msgid "Here are sample schema and data for examples:"
msgstr ""

msgid ""
"```sql\n"
"CREATE TABLE tags (\n"
"  name text PRIMARY KEY\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tag_name_index ON tags\n"
"  USING pgroonga (name pgroonga_text_term_search_ops_v2);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO tags VALUES ('PostgreSQL');\n"
"INSERT INTO tags VALUES ('Groonga');\n"
"INSERT INTO tags VALUES ('PGroonga');\n"
"INSERT INTO tags VALUES ('pglogical');\n"
"```"
msgstr ""

msgid "You can perform prefix search with prefix by `&^` operator:"
msgstr ""

msgid ""
"```sql\n"
"SELECT * FROM tags WHERE name &^ 'pg';\n"
"--    name    \n"
"-- -----------\n"
"--  PGroonga\n"
"--  pglogical\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid "You can use custom normalizer in prefix search as below."
msgstr ""

msgid ""
"```sql\n"
"CREATE TABLE tags (\n"
"  name text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tag_name_index ON tags\n"
"  USING pgroonga (name pgroonga_text_term_search_ops_v2)\n"
"  WITH (normalizers='NormalizerNFKC150(\"remove_symbol\", true)');\n"
"```"
msgstr ""

msgid "You can prefix search with custom normalizer even if PGroonga's index is not used."
msgstr ""

msgid ""
"```sql\n"
"SET enable_seqscan = on;\n"
"SET enable_indexscan = off;\n"
"SET enable_bitmapscan = off;"
msgstr ""

msgid ""
"EXPLAIN (COSTS OFF)\n"
"SELECT name\n"
"  FROM tags\n"
" WHERE name &^ ('-p_G', NULL, 'pgrn_index')::pgroonga_full_text_search_condition;\n"
"QUERY PLAN\n"
"Seq Scan on tags\n"
"  Filter: (name &^ '(-p_G,,pgrn_index)'::pgroonga_full_text_search_condition)\n"
"(2 rows)"
msgstr ""

msgid ""
"SELECT name\n"
"  FROM tags\n"
" WHERE name &^ ('-p_G', NULL, 'pgrn_index')::pgroonga_full_text_search_condition;\n"
"   name    \n"
"-----------\n"
" PGroonga\n"
" pglogical\n"
"(2 rows)\n"
"```"
msgstr ""

msgid "## See also"
msgstr ""

msgid "  * [`&^~` operator][prefix-rk-search-v2]: Prefix RK search"
msgstr ""

msgid "  * [`&^|` operator][prefix-search-in-v2]: Prefix search by an array of prefixes"
msgstr ""

msgid "  * [`!&^|` operator][not-prefix-search-in-v2]: NOT prefix search by an array of prefixes"
msgstr ""

msgid "  * [`&^~|` operator][prefix-rk-search-in-v2]: Prefix RK search by an array of prefixes"
msgstr ""

msgid "[prefix-rk-search-v2]:prefix-rk-search-v2.html"
msgstr ""

msgid "[prefix-search-in-v2]:prefix-search-in-v2.html"
msgstr ""

msgid "[not-prefix-search-in-v2]:not-prefix-search-in-v2.html"
msgstr ""

msgid "[prefix-rk-search-in-v2]:prefix-rk-search-in-v2.html"
msgstr ""
