# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 12:18+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../../../v1/reference/functions/pgroonga-command.md:1
msgid "---\n"
"title: pgroonga.command function\n"
"upper_level: ../\n"
"---"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:6
msgid "# `pgroonga.command` function"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:8
msgid "## Summary"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:10
msgid "`pgroonga.command` function executes a [Groonga command](http://groonga.org/docs/reference/command.html) and returns the result as `text` type value."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:12
msgid "## Syntax"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:14
msgid "Here is the syntax of this function:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:16
msgid "```text\n"
"text pgroonga.command(command)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:20
msgid "`command` is a `text` type value. `pgroonga.command` executes `command` as a Groonga command."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:22
msgid "Here is another syntax of this function. It can be used since 1.1.9:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:24
msgid "```text\n"
"text pgroonga.command(name,\n"
"                      ARRAY[argument_name1, argument_value1,\n"
"                            argument_name2, argument_value2,\n"
"                            ...])\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:31
msgid "The second syntax is recommended because it escapes argument values automatically. It prevents syntax error and Groonga command injection."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:33
msgid "`name` is a `text` type value. It's a command name to be executed."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:35
msgid "`argument_name` is a `text` type value. It's an argument name followed by the corresponded argument value."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:37
msgid "`argument_value` is a `text` type value. It's an argument value of the preceding argument name."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:39
msgid "`pgroonga.command` builds a Groonga command from `name` and `argument_name`s and `argument_value`s and executes the built Groonga command."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:41
msgid "Groonga command returns result as JSON. `pgroonga.command` returns the JSON as `text` type value. You can use [JSON functions and operations provided by PostgreSQL]({{ site.postgresql_doc_base_url.en }}/functions-json.html) by casting the result to `json` or `jsonb` type."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:43
msgid "## Usage"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:45
msgid "Here are sample schema and data:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:47
msgid "```sql\n"
"CREATE TABLE memos (\n"
"  content text\n"
");"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:52
msgid "CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (content);"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:56
msgid "INSERT INTO memos VALUES ('PGroonga (PostgreSQL+Groonga) is great!');\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:59
msgid "Here is an example to run [`status` Groonga command](http://groonga.org/en/docs/reference/commands/status.html) that doesn't have any arguments:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:61
msgid "```sql\n"
"SELECT jsonb_pretty(pgroonga.command('status')::jsonb);\n"
"--               jsonb_pretty               \n"
"-- -----------------------------------------\n"
"--  [                                      +\n"
"--      [                                  +\n"
"--          0,                             +\n"
"--          1480484730.607103,             +\n"
"--          0.0001363754272460938          +\n"
"--      ],                                 +\n"
"--      {                                  +\n"
"--          \"uptime\": 859,                 +\n"
"--          \"version\": \"6.1.0-53-g460b5c9\",+\n"
"--          \"n_queries\": 6,                +\n"
"--          \"starttime\": 1480483871,       +\n"
"--          \"start_time\": 1480483871,      +\n"
"--          \"alloc_count\": 14034,          +\n"
"--          \"cache_hit_rate\": 0.0,         +\n"
"--          \"command_version\": 1,          +\n"
"--          \"max_command_version\": 3,      +\n"
"--          \"default_command_version\": 1   +\n"
"--      }                                  +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:87
msgid "Here is an example to search inserted data. You can use [`select` Groonga command](http://groonga.org/docs/reference/commands/select.html) for the purpose. You need to convert PGroonga index name to Groonga table name by [`pgroonga.table_name` function](pgroonga-table-name.html)."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:89
msgid "```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command(\n"
"    'select ' ||\n"
"    '--table ' || pgroonga.table_name('pgroonga_memos_index')\n"
"  )::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480484984.533947,                                +\n"
"--          0.0005786418914794922                             +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:134
msgid "Here is an example that searches records that contains \"PostgreSQL\" and \"Groonga\". Note that you need to quote \"PostgreSQL Groonga\" to treat as one argument value:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:136
msgid "```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command(\n"
"    'select ' ||\n"
"    '--table ' || pgroonga.table_name('pgroonga_memos_index') || ' ' ||\n"
"    '--match_columns content ' ||\n"
"    '--query \"PostgreSQL Groonga\"'\n"
"  )::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480485153.923481,                                +\n"
"--          0.002448797225952148                              +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:183
msgid "If you use arguments array style, you don't need to care about quoting:"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:185
msgid "```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command(\n"
"    'select',\n"
"    ARRAY[\n"
"      'table', pgroonga.table_name('pgroonga_memos_index'),\n"
"      'match_columns', 'content',\n"
"      'query', 'PostgreSQL Groonga'\n"
"    ]\n"
"  )::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480485246.841189,                                +\n"
"--          0.00008869171142578125                            +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:234
msgid "## Attention for `select` Groonga command {#attention}"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:236
msgid "You need to take care about invalid tuples when you use [`select` Groonga command](http://groonga.org/docs/reference/commands/select.html)."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:238
msgid "See [`pgroonga_tuple_is_alive` Groonga function](../groonga-functions/pgroonga-tuple-is-alive.html) for details."
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:240
msgid "## See also"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:242
msgid "  * [Examples in tutorial](../../tutorial/#groonga)"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:244
msgid "  * [`pgroonga.table_name` function](pgroonga-table-name.html)"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:246
msgid "  * [`pgroonga_tuple_is_alive` Groonga function](../groonga-functions/pgroonga-tuple-is-alive.html)"
msgstr ""

