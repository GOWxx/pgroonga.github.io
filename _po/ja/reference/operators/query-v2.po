msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"&@~ operator for non jsonb types\"\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: \"jsonb型以外の型用の&@~演算子\"\n"
"upper_level: ../\n"
"---"

msgid "# `&@~` operator for non `jsonb` types"
msgstr "# `jsonb`型以外の型用の`&@~`演算子"

msgid "Since 1.2.2."
msgstr "1.2.2で追加。"

msgid "`&?` operator is deprecated since 1.2.2. Use `&@~` operator instead."
msgstr "`&?`演算子は1.2.2から非推奨です。代わりに`&@~`演算子を使ってください。"

msgid "## Summary"
msgstr "## 概要"

msgid "`&@~` operator performs full text search with query."
msgstr "`&@~`演算子はクエリーを使って全文検索を実行します。"

msgid ""
"Query's syntax is similar to syntax that is used in Web search engine. For exa"
"mple, you can use OR search by `KEYWORD1 OR KEYWORD2` in query."
msgstr "クエリーの構文はWeb検索エンジンで使われている構文と似ています。たとえば、クエリーで`キーワード1 OR キーワード2`と書くとOR検索できます。"

msgid "## Syntax"
msgstr "## 構文"

msgid "There are two signatures:"
msgstr "使い方は2つあります。"

msgid ""
"```sql\n"
"column &@~ query\n"
"column &@~ ROW(query, weights, index_name)\n"
"```"
msgstr ""

msgid "The former is simpler than the latter. The former is enough for most cases."
msgstr "前者は後者よりもシンブルです。多くの場合は前者で十分です。"

msgid ""
"The latter is useful to optimize search score. For example, you can implement "
"\"title is more important than content\" for blog application."
msgstr "後者は検索スコアーを最適化するときに便利です。たとえば、ブログアプリケーションで「タイトルは本文よりも重要」という検索を実現できます。"

msgid "The latter is available since 2.0.4."
msgstr "後者は2.0.4から使えます。"

msgid "Here is the description of the former signature."
msgstr "以下は前者の使い方の説明です。"

msgid ""
"```sql\n"
"column &@~ query\n"
"```"
msgstr ""

msgid ""
"`column` is a column to be searched. It's `text` type, `text[]` type or `varch"
"ar` type."
msgstr "`column`は検索対象のカラムです。型は`text`型、`text[]`型、`varchar`型のどれかです。"

msgid ""
"`query` is a query for full text search. It's `text` type for `text` type or `"
"text[]` type `column`. It's `varchar` type for `varchar` type `column`."
msgstr ""
"`query`は全文検索用のクエリーです。`column`が`text`型または`text[]`型なら`query`は`text`型です。`column`が"
"`varchar`型なら`query`は`varchar`型です。"

msgid "[Groonga's query syntax][groonga-query-syntax] is used in `query`."
msgstr "`qeury`では[Groongaのクエリー構文][groonga-query-syntax]を使います。"

msgid "Here is the description of the latter signature."
msgstr "以下は後者の使い方の説明です。"

msgid ""
"```sql\n"
"column &@~ ROW(query, weights, index_name)\n"
"```"
msgstr ""

msgid ""
"`weights` is importance factors of each value. It's `int[]` type. If `column` "
"is `text` type or `varchar` type, the first element is used for importance fac"
"tor of the value. If `column` is `text[]` type, the same position value is use"
"d as importance factor."
msgstr ""
"`weights`はそれぞれの値の重要度です。`int[]`型です。もし、`column`が`text`型か`varchar`型なら、最初の要素がカラムの値"
"の重要度になります。`column`が`text[]`型なら、同じ位置の値がその値の重要度になります。"

msgid ""
"`weights` can be `NULL`. Elements of `weights` can also be `NULL`. If the corr"
"esponding importance factor is `NULL`, the importance factor is `1`."
msgstr "`weights`を`NULL`にできます。`weights`の要素も`NULL`にできます。対応する重要度が`NULL`の場合は重要度は`1`になります。"

msgid ""
"If importance factor is `0`, the value is ignored. For example, `ARRAY[1, 0, 1"
"]` means the second value isn't search target."
msgstr "重要度が`0`の場合は対応する値を無視します。たとえば、`ARRAY[1, 0, 1]`は2番目の値は検索しないという意味になります。"

msgid ""
"`index_name` is an index name of the corresponding PGroonga index. It's `text`"
" type."
msgstr "`index_name`は対応するPGroongaのインデックス名です。`text`型です。"

msgid "`index_name` can be `NULL`."
msgstr ""

msgid ""
"It's for using the same search options specified in PGroonga index in sequenti"
"al search."
msgstr "これはシーケンシャルサーチのときにもPGroongaのインデックスに指定した検索オプションを使えるようにするために使われます。"

msgid "It's not implemented yet."
msgstr "未実装です。"

msgid "## Operator classes"
msgstr "## 演算子クラス"

msgid ""
"You need to specify one of the following operator classes to use this operator"
":"
msgstr "この演算子を使うには次のどれかの演算子クラスを指定する必要があります。"

msgid "  * `pgroonga_text_full_text_search_ops_v2`: Default for `text`"
msgstr "  * `pgroonga_text_full_text_search_ops_v2`：`text`型のデフォルト"

msgid "  * `pgroonga_text_array_full_text_search_ops_v2`: Default for `text[]`"
msgstr "  * `pgroonga_text_array_full_text_search_ops_v2`：`text[]`型のデフォルト"

msgid "  * `pgroonga_varchar_full_text_search_ops_v2`: For `varchar`"
msgstr "  * `pgroonga_varchar_full_text_search_ops_v2`：`varchar`用"

msgid "  * `pgroonga_text_full_text_search_ops`: For `text`"
msgstr "  * `pgroonga_text_full_text_search_ops`：`text`用"

msgid "  * `pgroonga_text_array_full_text_search_ops`: For `text[]`"
msgstr "  * `pgroonga_text_array_full_text_search_ops`：`text[]`用"

msgid "  * `pgroonga_varchar_full_text_search_ops`: For `varchar`"
msgstr "  * `pgroonga_varchar_full_text_search_ops`：`varchar`用"

msgid "## Usage"
msgstr "## 使い方"

msgid "Here are sample schema and data for examples:"
msgstr "例に使うサンプルスキーマとデータは次の通りです。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_content_index ON memos USING pgroonga (content);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQL is a relational database management s"
"ystem.');\n"
"INSERT INTO memos VALUES (2, 'Groonga is a fast full text search engine that s"
"upports all languages.');\n"
"INSERT INTO memos VALUES (3, 'PGroonga is a PostgreSQL extension that uses Gro"
"onga as index.');\n"
"INSERT INTO memos VALUES (4, 'There is groonga command.');\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQLはリレーショナル・データベース管理システムです。');\n"
"INSERT INTO memos VALUES (2, 'Groongaは日本語対応の高速な全文検索エンジンです。');\n"
"INSERT INTO memos VALUES (3, 'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です"
"。');\n"
"INSERT INTO memos VALUES (4, 'groongaコマンドがあります。');\n"
"```"

msgid ""
"You can perform full text search with multiple keywords by `&@~` operator like"
" `KEYWORD1 KEYWORD2`. You can also do OR search by `KEYWORD1 OR KEYWORD2`:"
msgstr ""
"`&@~`演算子を使うと`キーワード1 キーワード2`のように複数のキーワードを指定して全文検索できます。`キーワード1 OR キーワード2`のようにOR検"
"索することもできます。"

msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content &@~ 'PGroonga OR PostgreSQL';\n"
"--  id |                            content                             \n"
"-- ----+----------------------------------------------------------------\n"
"--   3 | PGroonga is a PostgreSQL extension that uses Groonga as index.\n"
"--   1 | PostgreSQL is a relational database management system.\n"
"-- (2 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT * FROM memos WHERE content &@~ 'PGroonga OR PostgreSQL';\n"
"--  id |                                  content\n"
"-- ----+----------------------------------------------------------------------"
"-----\n"
"--   3 | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\n"
"--   1 | PostgreSQLはリレーショナル・データベース管理システムです。\n"
"-- (2 rows)\n"
"```"

msgid "You can also implement \"title is more important than content\"."
msgstr "「タイトルは本文よりも重要」も実現できます。"

msgid ""
"```sql\n"
"DROP TABLE IF EXISTS memos;\n"
"CREATE TABLE memos (\n"
"  title text,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"    ON memos\n"
" USING PGroonga ((ARRAY[title, content]));\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO memos VALUES ('PostgreSQL', 'PostgreSQL is a relational database m"
"anagement system.');\n"
"INSERT INTO memos VALUES ('Groonga', 'Groonga is a fast full text search engin"
"e that supports all languages.');\n"
"INSERT INTO memos VALUES ('PGroonga', 'PGroonga is a PostgreSQL extension that"
" uses Groonga as index.');\n"
"INSERT INTO memos VALUES ('CLI', 'There is groonga command.');\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO memos VALUES ('PostgreSQL', 'PostgreSQLはリレーショナル・データベース管理システムです。');"
"\n"
"INSERT INTO memos VALUES ('Groonga', 'Groongaは日本語対応の高速な全文検索エンジンです。');\n"
"INSERT INTO memos VALUES ('PGroonga', 'PGroongaはインデックスとしてGroongaを使うためのPostgreS"
"QLの拡張機能です。');\n"
"INSERT INTO memos VALUES ('コマンドライン', 'groongaコマンドがあります。');\n"
"```"

msgid ""
"You can find more suitable records against \"`Groonga OR PostgreSQL`\" query wit"
"h [`pgroonga_score` function][score]:"
msgstr ""
"[`pgroonga_score`関数][score]を使うと、「`Groonga OR PostgreSQL`」というクエリーに対してより適切なレコードを"
"見つけられます。"

msgid ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       ROW('Groonga OR PostgreSQL', ARRAY[5, 1], 'pgroonga_memos_index')\n"
" ORDER BY score DESC;\n"
"--    title    |                                content                       "
"          | score \n"
"-- ------------+--------------------------------------------------------------"
"----------+-------\n"
"--  Groonga    | Groonga is a fast full text search engine that supports all l"
"anguages. |     6\n"
"--  PostgreSQL | PostgreSQL is a relational database management system.       "
"          |     6\n"
"--  PGroonga   | PGroonga is a PostgreSQL extension that uses Groonga as index"
".         |     2\n"
"--  CLI        | There is groonga command.                                    "
"          |     1\n"
"-- (4 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       ROW('Groonga OR PostgreSQL', ARRAY[5, 1], 'pgroonga_memos_index')\n"
" ORDER BY score DESC;\n"
"--      title      |                                  content                 "
"                 | score \n"
"-- ----------------+----------------------------------------------------------"
"-----------------+-------\n"
"--  Groonga        | Groongaは日本語対応の高速な全文検索エンジンです。                         |   "
"  6\n"
"--  PostgreSQL     | PostgreSQLはリレーショナル・データベース管理システムです。                |     6"
"\n"
"--  PGroonga       | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。 |     2"
"\n"
"--  コマンドライン | groongaコマンドがあります。                                               "
"|     1\n"
"-- (4 rows)\n"
"```"

msgid ""
"You can confirm that the record which has \"`Groonga`\" or \"`PostgreSQL`\" in `ti"
"tle` column has more high score than \"`Groonga`\" or \"`PostgreSQL`\" in `content"
"` column."
msgstr ""
"`title`カラムに「`Groonga`」または「`PostgreSQL`」があるレコードの方が`content`カラムに「`Groonga`」または「`"
"PostgreSQL`」がある方がスコアーが高いことを確認できます。"

msgid ""
"You can ignore `content` column data by specifying `0` as the second weight va"
"lue:"
msgstr "2番目の重みの値に`0`を指定すると`content`カラムを無視できます。"

msgid ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       ROW('Groonga OR PostgreSQL', ARRAY[5, 0], 'pgroonga_memos_index')\n"
" ORDER BY score DESC;\n"
"--    title    |                                content                       "
"          | score \n"
"-- ------------+--------------------------------------------------------------"
"----------+-------\n"
"--  Groonga    | Groonga is a fast full text search engine that supports all l"
"anguages. |     5\n"
"--  PostgreSQL | PostgreSQL is a relational database management system.       "
"          |     5\n"
"-- (2 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       ROW('Groonga OR PostgreSQL', ARRAY[5, 0], 'pgroonga_memos_index')\n"
" ORDER BY score DESC;\n"
"--    title    |                          content                           | "
"score \n"
"-- ------------+------------------------------------------------------------+-"
"------\n"
"--  Groonga    | Groongaは日本語対応の高速な全文検索エンジンです。          |     5\n"
"--  PostgreSQL | PostgreSQLはリレーショナル・データベース管理システムです。 |     5\n"
"-- (2 rows)\n"
"```"

msgid "See [Groonga document][groonga-query-syntax] for query syntax details."
msgstr "クエリーの構文の詳細は[Groongaのドキュメント][groonga-query-syntax]を参照してください。"

msgid ""
"Note that you can't use syntax that starts with `COLUMN_NAME:` like `COLUMN_NA"
"ME:@KEYWORD`. It's disabled in PGroonga."
msgstr "`カラム名:@キーワード`のように`カラム名:`から始まる構文を使うことはできません。これはPGroongaで無効にしています。"

msgid ""
"You can't use `COLUMN_NAME:^VALUE` for prefix search. You need to use `VALUE*`"
" for prefix search."
msgstr "前方一致検索のために`カラム名:^値`という構文を使うことができません。前方一致検索には`値*`を使ってください。"

msgid "## See also"
msgstr "## 参考"

msgid "  * [`&@` operator][match-v2]: Full text search by a keyword"
msgstr "  * [`&@`演算子][match-v2]：キーワード1つでの全文検索"

msgid "  * [Groonga's query syntax][groonga-query-syntax]"
msgstr "  * [Groongaのクエリーの構文][groonga-query-syntax]"

msgid "[match-v2]:match-v2.html"
msgstr ""

msgid ""
"[groonga-query-syntax]:http://groonga.org/docs/reference/grn_expr/query_syntax"
".html"
msgstr ""
"[groonga-query-syntax]:http://groonga.org/ja/docs/reference/grn_expr/query_syn"
"tax.html"
