msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"---\n"
"title: pgroonga_tuple_is_alive Groonga function\n"
"upper_level: ../\n"
"---"
msgstr ""

msgid "# `pgroonga_tuple_is_alive` Groonga function"
msgstr ""

msgid "Since 1.1.8."
msgstr ""

msgid "## Summary"
msgstr ""

msgid "`pgroonga_tuple_is_alive` Groonga function returns whether the tuple associated with the record is alive or not."
msgstr ""

msgid "PostgreSQL keeps invalid tuples such as `DELETE`-ed or `UPDATE`-ed tuples until `VACUUM`. PostgreSQL removes invalid tuples when it searches."
msgstr ""

msgid "The Groonga database used by PGroonga also keeps records associated with invalid tuples until `VACUUM`. It means that `SELECT pgroonga_command('select ' || pgroonga_table_name('INDEX_NAME'))` includes records associated with invalid tuples. Because [`select` Groonga command](http://groonga.org/docs/reference/commands/select.html) doesn't know about invalid tuples in PostgreSQL."
msgstr ""

msgid "`pgroonga_tuple_is_alive` checks whether the tuple associated with the Groonga record is alive (= not invalid). If you add `pgroonga_tuple_is_alive(ctid)` to [`--filter` parameter](http://groonga.org/docs/reference/commands/select.html#select-filter) value of `select` Groonga command, you can get only alive records even if `VACUUM` isn't executed."
msgstr ""

msgid "## Syntax"
msgstr ""

msgid "Here is the syntax of this Groonga function:"
msgstr ""

msgid ""
"```text\n"
"pgroonga_tuple_is_alive(ctid)\n"
"```"
msgstr ""

msgid "`ctid` means the `ctid` column. It's automatically created by PGroonga. You shouldn't change it."
msgstr ""

msgid "## Usage"
msgstr ""

msgid "You need to take care about invalid tuples when you use `select` Groonga command."
msgstr ""

msgid "You may get invalid records when PGroonga index target table processed one or more `DELETE` or `UPDATE` after the last `VACUUM`. There are records that associated with deleted and/or old tuples in Groonga table for the case. If there are deleted or old tuples, `select` Groonga command may return records associated with them."
msgstr ""

msgid "The followings show this case by example."
msgstr ""

msgid "Here are sample schema and data for examples:"
msgstr ""

msgid ""
"```sql\n"
"CREATE TABLE posts (\n"
"  id integer PRIMARY KEY,\n"
"  title text,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_posts_index\n"
"          ON posts\n"
"       USING pgroonga (id, title, content);"
msgstr ""

msgid ""
"INSERT INTO posts VALUES (1, 'PostgreSQL', 'PostgreSQL is a relational database management system.');\n"
"INSERT INTO posts VALUES (2, 'Groonga', 'Groonga is a fast full text search engine that supports all languages.');\n"
"INSERT INTO posts VALUES (3, 'PGroonga', 'PGroonga is a PostgreSQL extension that uses Groonga as index.');\n"
"```"
msgstr ""

msgid "Here is the result before updating. There are 3 records:"
msgstr ""

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM json_array_elements(\n"
"         pgroonga_command('select ' ||\n"
"                          pgroonga_table_name('pgroonga_posts_index')\n"
"                         )::json->1->0);\n"
"--                                               value                                              \n"
"-- -------------------------------------------------------------------------------------------------\n"
"--  [3]\n"
"--  [[\"_id\",\"UInt32\"],[\"content\",\"LongText\"],[\"ctid\",\"UInt64\"],[\"id\",\"Int32\"],[\"title\",\"LongText\"]]\n"
"--  [1,\"PostgreSQL is a relational database management system.\",1,1,\"PostgreSQL\"]\n"
"--  [2,\"Groonga is a fast full text search engine that supports all languages.\",2,2,\"Groonga\"]\n"
"--  [3,\"PGroonga is a PostgreSQL extension that uses Groonga as index.\",3,3,\"PGroonga\"]\n"
"-- (5 rows)\n"
"```"
msgstr ""

msgid "Update 1 record:"
msgstr ""

msgid ""
"```sql\n"
"UPDATE posts\n"
"   SET title = 'Mroonga',\n"
"       content = 'Mroonga is a MySQL storage engine that uses Groonga as backend.'\n"
" WHERE id = 3;\n"
"```"
msgstr ""

msgid "Executes `select` Groonga command again. It returns 4 records. 1 record is added because there is the record before updating:"
msgstr ""

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM json_array_elements(\n"
"         pgroonga_command('select ' ||\n"
"                          pgroonga_table_name('pgroonga_posts_index')\n"
"                         )::json->1->0);\n"
"--                                               value                                              \n"
"-- -------------------------------------------------------------------------------------------------\n"
"--  [4]\n"
"--  [[\"_id\",\"UInt32\"],[\"content\",\"LongText\"],[\"ctid\",\"UInt64\"],[\"id\",\"Int32\"],[\"title\",\"LongText\"]]\n"
"--  [1,\"PostgreSQL is a relational database management system.\",1,1,\"PostgreSQL\"]\n"
"--  [2,\"Groonga is a fast full text search engine that supports all languages.\",2,2,\"Groonga\"]\n"
"--  [3,\"PGroonga is a PostgreSQL extension that uses Groonga as index.\",3,3,\"PGroonga\"]\n"
"--  [4,\"Mroonga is a MySQL storage engine that uses Groonga as backend.\",4,3,\"Mroonga\"]\n"
"-- (6 rows)\n"
"```"
msgstr ""

msgid "You can remove the record associated old tuple by specify `pgroonga_tuple_is_alive(ctid)` as `--filter` parameter value:"
msgstr ""

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM json_array_elements(\n"
"         pgroonga_command('select ' ||\n"
"                          pgroonga_table_name('pgroonga_posts_index') ||\n"
"                          ' --filter \"pgroonga_tuple_is_alive(ctid)\"'\n"
"                         )::json->1->0);\n"
"--                                               value                                              \n"
"-- -------------------------------------------------------------------------------------------------\n"
"--  [3]\n"
"--  [[\"_id\",\"UInt32\"],[\"content\",\"LongText\"],[\"ctid\",\"UInt64\"],[\"id\",\"Int32\"],[\"title\",\"LongText\"]]\n"
"--  [1,\"PostgreSQL is a relational database management system.\",1,1,\"PostgreSQL\"]\n"
"--  [2,\"Groonga is a fast full text search engine that supports all languages.\",2,2,\"Groonga\"]\n"
"--  [4,\"Mroonga is a MySQL storage engine that uses Groonga as backend.\",4,3,\"Mroonga\"]\n"
"-- (5 rows)\n"
"```"
msgstr ""

msgid "There isn't the record associated with the old tuple."
msgstr ""

msgid "The record associated with the old tuple is deleted when `VACUUM` is executed."
msgstr ""

msgid "Execute `VACUUM FULL` explicitly. And then execute `select` Groonga command without `pgroonga_tuple_is_alive(ctid)` again. It returns 3 records. There isn't the record associated with the old record:"
msgstr ""

msgid ""
"```sql\n"
"VACUUM FULL;\n"
"SELECT *\n"
"  FROM json_array_elements(\n"
"         pgroonga_command('select ' ||\n"
"                          pgroonga_table_name('pgroonga_posts_index')\n"
"                         )::json->1->0);\n"
"--                                               value                                              \n"
"-- -------------------------------------------------------------------------------------------------\n"
"--  [3]\n"
"--  [[\"_id\",\"UInt32\"],[\"content\",\"LongText\"],[\"ctid\",\"UInt64\"],[\"id\",\"Int32\"],[\"title\",\"LongText\"]]\n"
"--  [1,\"PostgreSQL is a relational database management system.\",1,1,\"PostgreSQL\"]\n"
"--  [2,\"Groonga is a fast full text search engine that supports all languages.\",2,2,\"Groonga\"]\n"
"--  [3,\"Mroonga is a MySQL storage engine that uses Groonga as backend.\",3,3,\"Mroonga\"]\n"
"-- (5 rows)\n"
"```"
msgstr ""

msgid "## See also"
msgstr ""

msgid "  * [`pgroonga_command` function][command]"
msgstr ""

msgid "[command]:../functions/pgroonga-command.html"
msgstr ""
