msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"---\n"
"title: pgroonga_result_to_recordset function\n"
"upper_level: ../\n"
"---"
msgstr ""

msgid "# `pgroonga_result_to_recordset` function"
msgstr ""

msgid "Since 2.3.0."
msgstr ""

msgid "## Summary"
msgstr ""

msgid "`pgroonga_result_to_recordset` function is similar to [`pgroonga_result_to_jsonb_objects` function][pgroonga-result-to-jsonb-objects]."
msgstr ""

msgid "`pgroonga_result_to_recordset` function converts [`pgroonga_command` function][pgroonga-command]'s result JSON to set of `record` type. This is similar to PostgreSQL's [`jsonb_to_recordset` function][postgresql-jsonb-to-recordset]. Generally, set of `record` type is easier to handle rather than the result JSON."
msgstr ""

msgid "This will support all result JSON formats of Groonga command but the following commands are only supported for now:"
msgstr ""

msgid "  * `select`: `command_version=1`"
msgstr ""

msgid "    * But drilldown results and slice results are ignored."
msgstr ""

msgid "  * `select`: `command_version=3`"
msgstr ""

msgid "## Syntax"
msgstr ""

msgid "Here is the syntax of this function:"
msgstr ""

msgid ""
"```text\n"
"setof record pgroonga_result_to_recordset(result)\n"
"```"
msgstr ""

msgid "`result` is a `jsonb` type value. You can cast `pgroonga_command` function's result `text` to `jsonb` to pass it to this function."
msgstr ""

msgid "## Usage"
msgstr ""

msgid "Here are sample schema and data:"
msgstr ""

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (content);"
msgstr ""

msgid ""
"INSERT INTO memos VALUES ('PGroonga (PostgreSQL+Groonga) is great!');\n"
"INSERT INTO memos VALUES ('Groonga is an embeddable full text search engine.');\n"
"```"
msgstr ""

msgid "Here is an example to return set of `record`:"
msgstr ""

msgid ""
"```sql\n"
"SELECT pgroonga_result_to_recordset(\n"
"  pgroonga_command(\n"
"    'select',\n"
"    ARRAY[\n"
"      'table', pgroonga_table_name('pgroonga_memos_index')\n"
"    ]\n"
"  )::jsonb\n"
");\n"
"--                pgroonga_result_to_recordset                \n"
"-- -----------------------------------------------------------\n"
"--  (1,1,\"PGroonga (PostgreSQL+Groonga) is great!\")\n"
"--  (2,2,\"Groonga is an embeddable full text search engine.\")\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid "You can use the result record set for `FROM` by specifying column names and types by `AS`:"
msgstr ""

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM pgroonga_result_to_recordset(\n"
"         pgroonga_command(\n"
"           'select',\n"
"           ARRAY[\n"
"             'table', pgroonga_table_name('pgroonga_memos_index')\n"
"           ]\n"
"         )::jsonb\n"
"       ) AS record(\n"
"         _id bigint,\n"
"         _key bigint,\n"
"         content text\n"
"       );\n"
"--  _id | _key |                      content                      \n"
"-- -----+------+---------------------------------------------------\n"
"--    1 |    1 | PGroonga (PostgreSQL+Groonga) is great!\n"
"--    2 |    2 | Groonga is an embeddable full text search engine.\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid "## See also"
msgstr ""

msgid "  * [`pgroonga_result_to_jsonb_objects` function][pgroonga-result-to-jsonb-objects]"
msgstr ""

msgid "  * [`pgroonga_command` function][pgroonga-command]"
msgstr ""

msgid "  * [`pgroonga_table_name` function][pgroonga-table-name]"
msgstr ""

msgid ""
"[pgroonga-result-to-jsonb-objects]:pgroonga-result-to-jsonb-objects.html\n"
"[pgroonga-command]:pgroonga-command.html\n"
"[pgroonga-table-name]:pgroonga-table-name.html"
msgstr ""

msgid "[postgresql-jsonb-to-recordset]:{{ site.postgresql_doc_base_url.en }}/functions-json.html"
msgstr ""
